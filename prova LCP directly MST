############### prova direct LCP-MST su Chlidonia leucopterus
library(terra)
library(gdistance)
library(igraph)
library(FNN)

#setwd("/media/r_projects/paola.merelli2/assegno_prin/IBAs/")

sp <- rast("IT_AOH_0/Chlidonias_leucopterus.tif")
resistance <- classify(sp, rbind(c(0, 0, 100), c(1, 1, 1)))
plot(resistance)

wdpa <- vect("IT/data_input/wdpa_ita.shp")
wdpa <- project(wdpa, crs(sp))
crs(sp) == crs(wdpa)
wdpa <- makeValid(wdpa)

extracted <- extract(sp, wdpa, touches = TRUE)

areas_with_habitat <- tapply(
  extracted[, 2],  # Valori del raster
  extracted[, 1],  # ID delle aree protette
  function(values) any(values == 1, na.rm = TRUE)  
)


PAs_with_habitat <- wdpa[as.logical(areas_with_habitat), ]

centroidi <- centroids(PAs_with_habitat)
print(centroidi)
coordinate_centroidi <- geom(centroidi)[, c("x", "y")]
points <- cbind(coordinate_centroidi, as.data.frame(centroidi))
colnames(points)[1:2] <- c("x", "y")
points_coords <- coordinate_centroidi
head(points_coords)
resistance_layer_raster <- raster(resistance)


find_nn_mst <- function(points, resistance_layer, k = 3) {
  
  transition_layer <- transition(resistance_layer, transitionFunction = mean, directions = 8)
  transition_layer <- geoCorrection(transition_layer, type = "c")
  
  n_points <- nrow(points)
  visited <- c(1)  
  unvisited <- setdiff(1:n_points, visited)
  
  mst_edges <- data.frame(from = integer(0), to = integer(0), cost = numeric(0))
  
  nn <- get.knn(points, k = k)$nn.index
  
  while (length(unvisited) > 0) {
    min_cost <- Inf
    best_edge <- NULL
    
    for (v in visited) {
      neighbors <- intersect(nn[v, ], unvisited)  # Considera solo vicini non visitati
      
      for (u in neighbors) {
        cost <- costDistance(transition_layer, points[v, ], points[u, ])
        
        if (cost < min_cost) {
          min_cost <- cost
          best_edge <- c(v, u)
        }
      }
    }
    
    # Aggiungi l'arco con costo minimo all'MST
    mst_edges <- rbind(mst_edges, data.frame(from = best_edge[1], to = best_edge[2], cost = min_cost))
    visited <- c(visited, best_edge[2])
    unvisited <- setdiff(unvisited, best_edge[2])
    
    gc()
  }
  
  return(mst_edges)
}

mst_edges <- find_nn_mst(points_coords, resistance_layer_raster, k = 3)

# Visualizza i risultati
print(mst_edges)
